{
    "openapi": "3.0.0",
    "info": {
        "title": "SimpleTasks API",
        "description": "Документация API для SimpleTasks",
        "version": "0.1"
    },
    "paths": {
        "/api/employees": {
            "get": {
                "tags": [
                    "Employees"
                ],
                "summary": "Get all employees",
                "operationId": "7fc06f144c1cd7925c5c391a6609f02d",
                "responses": {
                    "200": {
                        "description": "List of all employees",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Employee"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Employees"
                ],
                "summary": "Create a new employee",
                "operationId": "bfad4edec29b0edbd684a0afbd847510",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "position"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Employee name",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "Employee email",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "position": {
                                        "description": "Employee position",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Employee created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Employee"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/employees/{id}": {
            "get": {
                "tags": [
                    "Employees"
                ],
                "summary": "Get an employee by ID",
                "operationId": "d53e117f7e819b6f063fc96ea910eb75",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Employee"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Employee not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Employees"
                ],
                "summary": "Update an employee by ID",
                "operationId": "aab9bddc0c5cab0acc27a9d58b9cb2b0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "position"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Employee name",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "Employee email",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "position": {
                                        "description": "Employee position",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Employee updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Employee"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Employee not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Employees"
                ],
                "summary": "Delete an employee by ID",
                "operationId": "4743ab328b7641983d97c047c641038f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Employee deleted successfully"
                    },
                    "404": {
                        "description": "Employee not found"
                    }
                }
            }
        },
        "/api/tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Получить список всех задач",
                "description": "Возвращает список задач с возможностью фильтрации и сортировки.",
                "operationId": "471d938a3bfaeb6fbd981d7c3e2728b0",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Фильтр по статусу задачи",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "employee_id",
                        "in": "query",
                        "description": "Фильтр по ID сотрудника, назначенного на задачу",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Дата начала диапазона для фильтрации (формат: YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Дата окончания диапазона для фильтрации (формат: YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Поле для сортировки (например, 'created_at')",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Направление сортировки (asc или desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список всех задач",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Task"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Create a new task",
                "operationId": "f803ebdb2300acdb7e93bbe8d0b9a2e8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "description",
                                    "status"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "todo",
                                            "in_progress",
                                            "done"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Task created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tasks/{id}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get task by ID",
                "operationId": "90b3cd4d2d4b416dc989d2055dbed06c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Update task by ID",
                "operationId": "1aaf37e74360ef4c10fadaee02ae77fb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "description",
                                    "status"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "todo",
                                            "in_progress",
                                            "done"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Delete task by ID",
                "operationId": "ad582480cd57c2a4e3b6a426943eeca5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Task deleted"
                    }
                }
            }
        },
        "/api/tasks/{id}/assign": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Assign task to an employee",
                "operationId": "3fe20855729d34bc6924fdc11e022cf4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "employee_id"
                                ],
                                "properties": {
                                    "employee_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task assigned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tasks/grouped-by-status": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get tasks grouped by status",
                "operationId": "62ad54d764499221e2ef1cee81ba905b",
                "responses": {
                    "200": {
                        "description": "Tasks grouped by status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "tasks": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Task"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Employee": {
                "required": [
                    "id",
                    "name",
                    "email",
                    "status"
                ],
                "properties": {
                    "id": {
                        "description": "ID сотрудника",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "Имя сотрудника",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "description": "Email сотрудника (уникальный)",
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "status": {
                        "description": "Статус сотрудника",
                        "type": "string",
                        "enum": [
                            "working",
                            "on_vacation"
                        ],
                        "example": "working"
                    },
                    "created_at": {
                        "description": "Дата создания",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-07T16:00:40"
                    },
                    "updated_at": {
                        "description": "Дата обновления",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-07T16:00:40"
                    }
                },
                "type": "object"
            },
            "Task": {
                "required": [
                    "title",
                    "description",
                    "status"
                ],
                "properties": {
                    "id": {
                        "description": "The task ID",
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "description": "The task title",
                        "type": "string",
                        "example": "Sample Task"
                    },
                    "description": {
                        "description": "The task description",
                        "type": "string",
                        "example": "This is a sample task."
                    },
                    "status": {
                        "description": "The task status",
                        "type": "string",
                        "enum": [
                            "todo",
                            "in_progress",
                            "done"
                        ],
                        "example": "todo"
                    },
                    "created_at": {
                        "description": "Дата создания",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-07T16:00:40"
                    },
                    "updated_at": {
                        "description": "Дата обновления",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-07T16:00:40"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Employees",
            "description": "Employees"
        },
        {
            "name": "Tasks",
            "description": "Tasks"
        }
    ]
}